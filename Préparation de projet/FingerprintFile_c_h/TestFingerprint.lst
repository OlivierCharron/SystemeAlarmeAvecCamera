CCS PCH C Compiler, Version 4.135, 61713               06-Oct-14 21:48

               Filename: C:\5_Session automne 2014\247-501-HU Intégrer un système ordiné\Préparation de projet\FingerprintFile_c_h\TestFingerprint.lst

               ROM used: 48 bytes (0%)
                         Largest free fragment is 32720
               RAM used: 18 (1%) at main() level
                         18 (1%) worst case
               Stack:    0 locations

*
0000:  GOTO   0004
.................... #include <TestFingerprint.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=20000000,  clock=5000000) 
....................  
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8,stream=PORT1) 
....................  
....................  
.................... #include <FingerprintSensor.h> 
....................  
....................  
.................... #define uint32_t unsigned int32 
.................... #define uint8_t unsigned int8 
.................... #define uint16_t unsigned int16 
....................  
.................... #define FINGERPRINT_OK 0x00 
.................... #define FINGERPRINT_PACKETRECIEVEERR 0x01 
.................... #define FINGERPRINT_NOFINGER 0x02 
.................... #define FINGERPRINT_IMAGEFAIL 0x03 
.................... #define FINGERPRINT_IMAGEMESS 0x06 
.................... #define FINGERPRINT_FEATUREFAIL 0x07 
.................... #define FINGERPRINT_NOMATCH 0x08 
.................... #define FINGERPRINT_NOTFOUND 0x09 
.................... #define FINGERPRINT_ENROLLMISMATCH 0x0A 
.................... #define FINGERPRINT_BADLOCATION 0x0B 
.................... #define FINGERPRINT_DBRANGEFAIL 0x0C 
.................... #define FINGERPRINT_UPLOADFEATUREFAIL 0x0D 
.................... #define FINGERPRINT_PACKETRESPONSEFAIL 0x0E 
.................... #define FINGERPRINT_UPLOADFAIL 0x0F 
.................... #define FINGERPRINT_DELETEFAIL 0x10 
.................... #define FINGERPRINT_DBCLEARFAIL 0x11 
.................... #define FINGERPRINT_PASSFAIL 0x13 
.................... #define FINGERPRINT_INVALIDIMAGE 0x15 
.................... #define FINGERPRINT_FLASHERR 0x18 
.................... #define FINGERPRINT_INVALIDREG 0x1A 
.................... #define FINGERPRINT_ADDRCODE 0x20 
.................... #define FINGERPRINT_PASSVERIFY 0x21 
....................  
.................... #define FINGERPRINT_STARTCODE 0xEF01 
....................  
.................... #define FINGERPRINT_COMMANDPACKET 0x1 
.................... #define FINGERPRINT_DATAPACKET 0x2 
.................... #define FINGERPRINT_ACKPACKET 0x7 
.................... #define FINGERPRINT_ENDDATAPACKET 0x8 
....................  
.................... #define FINGERPRINT_TIMEOUT 0xFF 
.................... #define FINGERPRINT_BADPACKET 0xFE 
....................  
.................... #define FINGERPRINT_GETIMAGE 0x01 
.................... #define FINGERPRINT_IMAGE2TZ 0x02 
.................... #define FINGERPRINT_REGMODEL 0x05 
.................... #define FINGERPRINT_STORE 0x06 
.................... #define FINGERPRINT_LOAD 0x07 
.................... #define FINGERPRINT_UPLOAD 0x08 
.................... #define FINGERPRINT_DELETE 0x0C 
.................... #define FINGERPRINT_EMPTY 0x0D 
.................... #define FINGERPRINT_VERIFYPASSWORD 0x13 
.................... #define FINGERPRINT_HISPEEDSEARCH 0x1B 
.................... #define FINGERPRINT_TEMPLATECOUNT 0x1D 
....................  
.................... //#define FINGERPRINT_DEBUG  
....................  
.................... #define DEFAULTTIMEOUT 5000  // milliseconds 
....................  
....................   uint32_t thePassword; 
....................   uint32_t theAddress; 
....................   uint16_t fingerID, confidence, templateCount; 
.................... /*struct Adafruit_Fingerprint  
.................... { 
....................   uint32_t thePassword; 
....................   uint32_t theAddress; 
....................   uint16_t fingerID, confidence, templateCount; 
.................... };*/ 
....................  
....................   boolean Verify_Password(void); 
....................   uint8_t getImage(void); 
....................   uint8_t image2Tz(uint8_t slot = 1); 
....................   uint8_t createModel(void); 
....................  
....................   uint8_t emptyDatabase(void); 
....................   uint8_t storeModel(uint16_t id); 
....................   uint8_t loadModel(uint16_t id); 
....................   uint8_t getModel(void); 
....................   uint8_t deleteModel(uint16_t id); 
....................   uint8_t fingerFastSearch(void); 
....................   uint8_t getTemplateCount(void); 
....................   void writePacket(uint32_t addr, uint8_t packettype, uint16_t len, uint8_t *packet); 
....................   uint8_t getReply(uint8_t packet[], uint16_t timeout=DEFAULTTIMEOUT); 
....................   
....................  
....................  
....................  
.................... void main() 
.................... { 
0004:  CLRF   FF8
0006:  BCF    FD0.7
0008:  CLRF   FEA
000A:  CLRF   FE9
000C:  BSF    FB8.3
000E:  MOVLW  81
0010:  MOVWF  FAF
0012:  MOVLW  00
0014:  MOVWF  FB0
0016:  MOVLW  A6
0018:  MOVWF  FAC
001A:  MOVLW  90
001C:  MOVWF  FAB
001E:  MOVF   FC1,W
0020:  ANDLW  C0
0022:  IORLW  0F
0024:  MOVWF  FC1
0026:  MOVLW  07
0028:  MOVWF  FB4
....................    setup_timer_3(T3_DISABLED | T3_DIV_BY_1); 
002A:  CLRF   FB1
....................  
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................    } 
002C:  BRA    002C
....................  
.................... } 
002E:  SLEEP 

Configuration Fuses:
   Word  1: CC3C   PLL5 CPUDIV4 USBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
