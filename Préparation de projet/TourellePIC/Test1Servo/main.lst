CCS PCH C Compiler, Version 4.135, 61713               05-Oct-14 22:47

               Filename: C:\5_Session automne 2014\247-501-HU Intégrer un système ordiné\Préparation de projet\TourellePIC\Test1Servo\main.lst

               ROM used: 152 bytes (0%)
                         Largest free fragment is 32616
               RAM used: 6 (0%) at main() level
                         8 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   0050
.................... #include <main.h> 
.................... #include <18F4550.h> 
.................... //////// Standard Header file for the PIC18F4550 device //////////////// 
.................... #device PIC18F4550 
.................... #list 
....................  
.................... #device adc=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES WDT128                	//Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES CPUDIV4               	//System Clock by 4 
.................... #FUSES HS                    	//High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOXINST               	//Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
....................  
.................... #use delay(crystal=20000000,  clock=5000000) 
*
0028:  CLRF   FEA
002A:  MOVLW  06
002C:  MOVWF  FE9
002E:  MOVF   FEF,W
0030:  BZ    004C
0032:  MOVLW  01
0034:  MOVWF  01
0036:  CLRF   00
0038:  DECFSZ 00,F
003A:  BRA    0038
003C:  DECFSZ 01,F
003E:  BRA    0036
0040:  MOVLW  9E
0042:  MOVWF  00
0044:  DECFSZ 00,F
0046:  BRA    0044
0048:  DECFSZ FEF,F
004A:  BRA    0032
004C:  GOTO   008A (RETURN)
....................  
....................  
....................  
....................  
.................... unsigned int angle=0,i; 
.................... void cs_delay(unsigned int); 
....................  
.................... void main() 
.................... { 
0050:  CLRF   FF8
0052:  BCF    FD0.7
0054:  CLRF   FEA
0056:  CLRF   FE9
0058:  CLRF   04
005A:  MOVF   FC1,W
005C:  ANDLW  C0
005E:  IORLW  0F
0060:  MOVWF  FC1
0062:  MOVLW  07
0064:  MOVWF  FB4
....................    while(1) 
....................    { 
....................       for(angle=0;angle<=180;angle+=45) // Loop to increase the angle by 45° 
0066:  CLRF   04
0068:  MOVF   04,W
006A:  SUBLW  B4
006C:  BNC   0094
....................       { 
....................          for(i=0;i<50;i++) // Loop to provide continuous train of pulse 
006E:  CLRF   05
0070:  MOVF   05,W
0072:  SUBLW  31
0074:  BNC   008E
....................          { 
....................             output_high(PIN_D0); //=1; // Send high to control signal terninal 
0076:  BCF    F95.0
0078:  BSF    F8C.0
....................             cs_delay(angle); // Call delay function 
007A:  MOVFF  04,06
007E:  BRA    0004
....................             output_low (PIN_D0); //=0; // Send low to control signal terninal 
0080:  BCF    F95.0
0082:  BCF    F8C.0
....................             Delay_ms(18); 
0084:  MOVLW  12
0086:  MOVWF  06
0088:  BRA    0028
....................          } 
008A:  INCF   05,F
008C:  BRA    0070
....................       } 
008E:  MOVLW  2D
0090:  ADDWF  04,F
0092:  BRA    0068
....................    } 
0094:  BRA    0066
.................... } 
....................  
.................... void cs_delay(unsigned int count) 
.................... { 
*
0004:  CLRF   07
*
0096:  SLEEP 
....................    int j=0; 
....................    Delay_us(550); // Delay to move the servo at 0° 
*
0006:  MOVLW  E4
0008:  MOVWF  00
000A:  DECFSZ 00,F
000C:  BRA    000A
000E:  BRA    0010
....................    for(j=0;j<count;j++) // Repeat the loop equal to as much as angle 
0010:  CLRF   07
0012:  MOVF   06,W
0014:  SUBWF  07,W
0016:  BC    0024
....................    { 
....................       Delay_us(6); // Delay to displace servo by 1° 
0018:  MOVLW  02
001A:  MOVWF  00
001C:  DECFSZ 00,F
001E:  BRA    001C
....................    } 
0020:  INCF   07,F
0022:  BRA    0012
.................... } 
0024:  GOTO   0080 (RETURN)

Configuration Fuses:
   Word  1: CC3C   PLL5 CPUDIV4 USBDIV HS FCMEN IESO
   Word  2: 0E38   PUT NOBROWNOUT BORV21 VREGEN NOWDT WDT128
   Word  3: 8700   CCP2C1 PBADEN LPT1OSC MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
